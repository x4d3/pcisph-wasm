"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["pkg_index_js"],{

/***/ "./pkg/index.js":
/*!**********************!*\
  !*** ./pkg/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initThreadPool\": () => (/* binding */ initThreadPool),\n/* harmony export */   \"wbg_rayon_start_worker\": () => (/* binding */ wbg_rayon_start_worker),\n/* harmony export */   \"Simulation\": () => (/* binding */ Simulation),\n/* harmony export */   \"wbg_rayon_PoolBuilder\": () => (/* binding */ wbg_rayon_PoolBuilder),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _snippets_wasm_bindgen_rayon_7afa899f36665473_src_workerHelpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./snippets/wasm-bindgen-rayon-7afa899f36665473/src/workerHelpers.js */ \"./pkg/snippets/wasm-bindgen-rayon-7afa899f36665473/src/workerHelpers.js\");\n\n\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().slice(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    if (typeof(heap_next) !== 'number') throw new Error('corrupt heap');\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction _assertNum(n) {\n    if (typeof(n) !== 'number') throw new Error('expected a number argument');\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nfunction logError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n}\n/**\n* @param {number} num_threads\n* @returns {Promise<any>}\n*/\nfunction initThreadPool(num_threads) {\n    _assertNum(num_threads);\n    var ret = wasm.initThreadPool(num_threads);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} receiver\n*/\nfunction wbg_rayon_start_worker(receiver) {\n    _assertNum(receiver);\n    wasm.wbg_rayon_start_worker(receiver);\n}\n\nfunction _assertBoolean(n) {\n    if (typeof(n) !== 'boolean') {\n        throw new Error('expected a boolean argument');\n    }\n}\n\nlet cachegetFloat32Memory0 = null;\nfunction getFloat32Memory0() {\n    if (cachegetFloat32Memory0 === null || cachegetFloat32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n    }\n    return cachegetFloat32Memory0;\n}\n\nfunction getArrayF32FromWasm0(ptr, len) {\n    return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (typeof(arg) !== 'string') throw new Error('expected a string argument');\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n        if (ret.read !== arg.length) throw new Error('failed to pass whole string');\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n/**\n*/\nclass Simulation {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Simulation.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_simulation_free(ptr);\n    }\n    /**\n    * @param {HTMLCanvasElement} canvas\n    */\n    constructor(canvas) {\n        try {\n            var ret = wasm.simulation_new(addBorrowedObject(canvas));\n            return Simulation.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @returns {number}\n    */\n    get_num_particles() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = wasm.simulation_get_num_particles(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    step() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.simulation_step(this.ptr);\n    }\n    /**\n    */\n    add_block() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.simulation_add_block(this.ptr);\n    }\n    /**\n    */\n    reset() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.simulation_reset(this.ptr);\n    }\n}\n/**\n*/\nclass wbg_rayon_PoolBuilder {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        const obj = Object.create(wbg_rayon_PoolBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wbg_rayon_poolbuilder_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    numThreads() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = wasm.wbg_rayon_poolbuilder_numThreads(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    receiver() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = wasm.wbg_rayon_poolbuilder_receiver(this.ptr);\n        return ret;\n    }\n    /**\n    */\n    build() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.wbg_rayon_poolbuilder_build(this.ptr);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nasync function init(input, maybe_memory) {\n    if (typeof input === 'undefined') {\n        input = new URL(/* asset import */ __webpack_require__(/*! index_bg.wasm */ \"./pkg/index_bg.wasm\"), __webpack_require__.b);\n    }\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_startWorkers_04f63eca19916b8f = function() { return logError(function (arg0, arg1, arg2) {\n        var ret = (0,_snippets_wasm_bindgen_rayon_7afa899f36665473_src_workerHelpers_js__WEBPACK_IMPORTED_MODULE_0__.startWorkers)(takeObject(arg0), takeObject(arg1), wbg_rayon_PoolBuilder.__wrap(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_WebGl2RenderingContext_10a94ffb664bd6d5 = function() { return logError(function (arg0) {\n        var ret = getObject(arg0) instanceof WebGL2RenderingContext;\n        _assertBoolean(ret);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_bufferData_cc607a102bc62ccf = function() { return logError(function (arg0, arg1, arg2, arg3) {\n        getObject(arg0).bufferData(arg1 >>> 0, getObject(arg2), arg3 >>> 0);\n    }, arguments) };\n    imports.wbg.__wbg_uniformMatrix4fv_2fd88482216ecf40 = function() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).uniformMatrix4fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_attachShader_61ac100e7a3e058a = function() { return logError(function (arg0, arg1, arg2) {\n        getObject(arg0).attachShader(getObject(arg1), getObject(arg2));\n    }, arguments) };\n    imports.wbg.__wbg_bindBuffer_d4ae25360cb2cfe9 = function() { return logError(function (arg0, arg1, arg2) {\n        getObject(arg0).bindBuffer(arg1 >>> 0, getObject(arg2));\n    }, arguments) };\n    imports.wbg.__wbg_clear_693f3b2dec401560 = function() { return logError(function (arg0, arg1) {\n        getObject(arg0).clear(arg1 >>> 0);\n    }, arguments) };\n    imports.wbg.__wbg_clearColor_44388fda47caba66 = function() { return logError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).clearColor(arg1, arg2, arg3, arg4);\n    }, arguments) };\n    imports.wbg.__wbg_compileShader_3ddec20e99320848 = function() { return logError(function (arg0, arg1) {\n        getObject(arg0).compileShader(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_createBuffer_ae524402a4cd2a15 = function() { return logError(function (arg0) {\n        var ret = getObject(arg0).createBuffer();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_createProgram_0aaa2a1e9b6103f6 = function() { return logError(function (arg0) {\n        var ret = getObject(arg0).createProgram();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_createShader_70c2825247d9bb97 = function() { return logError(function (arg0, arg1) {\n        var ret = getObject(arg0).createShader(arg1 >>> 0);\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_drawArrays_cf9e51d1f22511f9 = function() { return logError(function (arg0, arg1, arg2, arg3) {\n        getObject(arg0).drawArrays(arg1 >>> 0, arg2, arg3);\n    }, arguments) };\n    imports.wbg.__wbg_enableVertexAttribArray_74e5805bc2159fe8 = function() { return logError(function (arg0, arg1) {\n        getObject(arg0).enableVertexAttribArray(arg1 >>> 0);\n    }, arguments) };\n    imports.wbg.__wbg_getAttribLocation_f4ed958a3726dc43 = function() { return logError(function (arg0, arg1, arg2, arg3) {\n        var ret = getObject(arg0).getAttribLocation(getObject(arg1), getStringFromWasm0(arg2, arg3));\n        _assertNum(ret);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_getProgramInfoLog_58fbd5b50bfa307d = function() { return logError(function (arg0, arg1, arg2) {\n        var ret = getObject(arg1).getProgramInfoLog(getObject(arg2));\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    }, arguments) };\n    imports.wbg.__wbg_getProgramParameter_b00aaec6ffd1d021 = function() { return logError(function (arg0, arg1, arg2) {\n        var ret = getObject(arg0).getProgramParameter(getObject(arg1), arg2 >>> 0);\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getShaderInfoLog_b6460853f4c64bdf = function() { return logError(function (arg0, arg1, arg2) {\n        var ret = getObject(arg1).getShaderInfoLog(getObject(arg2));\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    }, arguments) };\n    imports.wbg.__wbg_getShaderParameter_5091dc35fcf38b9d = function() { return logError(function (arg0, arg1, arg2) {\n        var ret = getObject(arg0).getShaderParameter(getObject(arg1), arg2 >>> 0);\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getUniformLocation_966502ffdeed5620 = function() { return logError(function (arg0, arg1, arg2, arg3) {\n        var ret = getObject(arg0).getUniformLocation(getObject(arg1), getStringFromWasm0(arg2, arg3));\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_linkProgram_924d9caf43e92317 = function() { return logError(function (arg0, arg1) {\n        getObject(arg0).linkProgram(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_shaderSource_0282713eff6af0ca = function() { return logError(function (arg0, arg1, arg2, arg3) {\n        getObject(arg0).shaderSource(getObject(arg1), getStringFromWasm0(arg2, arg3));\n    }, arguments) };\n    imports.wbg.__wbg_useProgram_5a3c46f60003825b = function() { return logError(function (arg0, arg1) {\n        getObject(arg0).useProgram(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_vertexAttribPointer_a11e6492ac983aa8 = function() { return logError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n        getObject(arg0).vertexAttribPointer(arg1 >>> 0, arg2, arg3 >>> 0, arg4 !== 0, arg5, arg6);\n    }, arguments) };\n    imports.wbg.__wbg_log_4989d5b00a0cc297 = function() { return logError(function (arg0) {\n        console.log(getObject(arg0));\n    }, arguments) };\n    imports.wbg.__wbg_setwidth_6ffbc02dcd566284 = function() { return logError(function (arg0, arg1) {\n        getObject(arg0).width = arg1 >>> 0;\n    }, arguments) };\n    imports.wbg.__wbg_setheight_dade0779787da2d7 = function() { return logError(function (arg0, arg1) {\n        getObject(arg0).height = arg1 >>> 0;\n    }, arguments) };\n    imports.wbg.__wbg_getContext_591a34067d6e74f2 = function() { return handleError(function (arg0, arg1, arg2) {\n        var ret = getObject(arg0).getContext(getStringFromWasm0(arg1, arg2));\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_43381b9f511c0022 = function() { return logError(function (arg0, arg1, arg2) {\n        var ret = new Float32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_random_727732de4695ec15 = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n    imports.wbg.__wbg_buffer_79a3294266d4e783 = function() { return logError(function (arg0) {\n        var ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        var ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        _assertNum(ret);\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_module = function() {\n        var ret = init.__wbindgen_wasm_module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        var ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    imports.wbg.memory = maybe_memory || new WebAssembly.Memory({initial:18,maximum:16384,shared:true});\n\n    const { instance, module } = await load(await input, imports);\n\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (init);\n\n\n\n//# sourceURL=webpack:///./pkg/index.js?");

/***/ }),

/***/ "./pkg/index_bg.wasm":
/*!***************************!*\
  !*** ./pkg/index_bg.wasm ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"cdd08516a2ace13e5588.wasm\";\n\n//# sourceURL=webpack:///./pkg/index_bg.wasm?");

/***/ })

}]);